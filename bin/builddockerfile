#!/bin/bash

BASE=$1
IS_APK=false
if [[ $BASE == *"alpine"* ]]
then
    IS_APK=true
fi


# Get the extensions that are requested for the dockerfile.
# Sort them and remove duplicates.
EXTENSIONS=$(echo "${@:2}" | xargs -n1 | sort -u | xargs)

# Get the script's directory. We use this to know where the dockerfile parts
# are at.
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# Echo the header
cat << 'EOF'
ARG PHP_TAG="cli"

FROM php:${PHP_TAG}
EOF

# Include each requested extension
for I in $EXTENSIONS
do
    EXT_DIR="$SCRIPT_DIR/../extensions/$I"

    if [[ ! -d "$EXT_DIR" ]]
    then
        echo "Unsupported extension $I" >&2
        exit 1
    fi
    
    # Add any APK specific commands
    if [[ "$IS_APK" = true && -f $SCRIPT_DIR/../extensions/$I/apk.dockerfile ]]
    then
        echo -e "\n" # Add a newline
        cat $SCRIPT_DIR/../extensions/$I/apk.dockerfile
    fi

    # Add any APT specific commands
    if [[ "$IS_APK" = false && -f $SCRIPT_DIR/../extensions/$I/apt.dockerfile ]]
    then
        echo -e "\n" # Add a newline
        cat $SCRIPT_DIR/../extensions/$I/apt.dockerfile
    fi
    
    # Add any remaining commands
    if [[ -f $SCRIPT_DIR/../extensions/$I/all.dockerfile ]]
    then
        echo -e "\n" # Add a newline
        cat $SCRIPT_DIR/../extensions/$I/all.dockerfile
    fi
done
