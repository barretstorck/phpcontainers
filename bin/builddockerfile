#!/bin/bash

BASE=$1
IS_APK=
if [[ $BASE == *"alpine"* ]]
then
    IS_APK=1
fi


# Get the extensions that are requested for the dockerfile.
# Sort them and remove duplicates.
EXTENSIONS=$(echo "${@:2}" | xargs -n1 | sort -u | xargs)

# Get the script's directory. We use this to know where the dockerfile parts
# are at.
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# Echo the header
echo -n "FROM php:$BASE"

# Include each requested extension
for I in $EXTENSIONS
do
    FOUND_FILE=
    EXT_DIR="$SCRIPT_DIR/../extensions/$I"

    if [[ ! -d "$EXT_DIR" ]]
    then
        echo "Unsupported extension $I" >&2
        exit 1
    fi
    
    # Add any APK specific commands
    if [[ -n "$IS_APK" && -f $EXT_DIR/apk.dockerfile ]]
    then
        echo -e "\n\n# Setup $I" # Add description and newlines
        cat $EXT_DIR/apk.dockerfile
        FOUND_FILE=1
    fi

    # Add any APT specific commands
    if [[ -z "$IS_APK" && -f $EXT_DIR/apt.dockerfile ]]
    then
        echo -e "\n\n# Setup $I" # Add description and newlines
        cat $EXT_DIR/apt.dockerfile
        FOUND_FILE=1
    fi
    
    # Add any remaining commands
    if [[ -f $EXT_DIR/all.dockerfile ]]
    then
        if [[ -z "$FOUND_FILE" ]]
        then
            echo -e "\n\n# Setup $I" # Add description and newlines
        else
            echo -e "\n" # Add a newline
        fi
        
        cat $EXT_DIR/all.dockerfile
        FOUND_FILE=1
    fi

    if [[ -z "$FOUND_FILE" ]]
    then
        echo "Unsupported extension $I" >&2
        exit 1
    fi
done

echo -e "\n"